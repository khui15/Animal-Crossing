{"componentChunkName":"component---src-templates-blog-post-js","path":"/blog/biom9450-overview/","result":{"data":{"markdownRemark":{"html":"<h1>Introduction to Databases</h1>\n<hr>\n<h1>Contents</h1>\n<ol>\n<li>Structure of a database</li>\n<li>Integrity</li>\n<li>Relationships</li>\n<li>\n<h2>Normalisation</h2>\n<h1>Structure of a database</h1>\n</li>\n</ol>\n<p>Databases are made up of a series of <strong>cells</strong>. The vertical cells are known as <strong>fields</strong> whilst the horizontal cells are known as <strong>records</strong>.</p>\n<ul>\n<li><strong>Cells</strong>: store a single piece of information.</li>\n<li><strong>Fields</strong>:  store one type of information and have unique names.</li>\n<li><strong>Records</strong>: are unique.</li>\n</ul>\n<p>Each record has an identifier known as a <strong>key</strong>, which allows you to index into a particular record. There are different types of keys:</p>\n<ul>\n<li>\n<p><strong>Primary keys</strong>: uniquely identifies a record in a table.</p>\n<p><em>eg</em>. Your zIDs could be used as a primary key in a table which holds student records.</p>\n</li>\n<li>\n<p><strong>Composite or concatenated keys</strong>: are a key which is made up of more than one field.</p>\n<p><em>eg</em>. For a database which stores locations, a longitude and latitude coordinate can be used as a concatenated key.  </p>\n</li>\n<li>\n<p><strong>Foreign keys</strong>: are keys which are a primary key in one table and a field in another.</p>\n<p><em>eg</em>. As mentioned previously, your zID could be used as a primary key in a table which holds student records. However, in a table which stores enrolments for a course, another field such as an autogenerated number can be used as the primary key whilst zIDs are just another field in the table.</p>\n</li>\n</ul>\n<hr>\n<h1>Integrity</h1>\n<p>There are several rules in place to ensure the integrity of a database.</p>\n<h2>Entity integrity</h2>\n<ul>\n<li>All records must be unique.</li>\n<li>The primary key must have a valid value.</li>\n</ul>\n<h2>Referential integrity</h2>\n<ul>\n<li>\n<p>Foreign keys must have a matching entry in the primary key in the related table or must be null.</p>\n<p><em>ie</em>. A student can not be enrolled a course, but if they are, the primary key must exist in the student records table.</p>\n</li>\n<li>This is to ensure links between tables are maintained and consistent.</li>\n</ul>\n<hr>\n<h1>Relationships</h1>\n<p>There are three ways tables can relate to each other:</p>\n<ul>\n<li>\n<p><strong>One-to-one (1:1)</strong>: is when a record in one table is associated with only one record in another.</p>\n<p><em>eg</em>. Consider a student record table, which stores information such as the zID, name and date of birth. Consider an additional table which stores the zID and contact information of students. One record in the student record table corresponds to one record int he contact information table.</p>\n</li>\n<li>\n<p><strong>One-to-many (1:M)</strong>: is when a record in one table is associated with many records in another.</p>\n<p><em>eg</em>. Consider a faculty table and a course table. The <code>Computer Science and Engineering</code> record under the faculty table would have many records under the course table such as <code>COMP1917</code> and <code>COMP1927</code>.</p>\n</li>\n<li><strong>Many-to-many (M:M)</strong>: is when many records in one table is associated with many in another.</li>\n</ul>\n<hr>\n<h1>Normalisation</h1>\n<p>Database normalisation aims to reduce eliminate redundancy.</p>\n<h2>First Normal Form</h2>\n<p>Eliminate duplicative columns from one table and create separate tables for each group of related data, identifying each row with a unique column.</p>\n<h2>Second Normal Form</h2>\n<p>Ensure that each field value is dependent on the primary key, else place them in separate tables.</p>\n<h2>Third Normal Form</h2>\n<p>Ensure that each field value is ONLY dependent on the primary key.</p>","frontmatter":{"date":"10 September, 2020","title":"BIOM9450 - Introduction to Databases","featuredImage":null}}},"pageContext":{"slug":"/biom9450-overview/"}}}